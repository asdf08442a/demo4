package com.enterprise.demo.permission.dao;

import com.enterprise.demo.permission.enums.StatusEnum;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserExample {

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  protected String orderByClause;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  protected boolean distinct;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  protected List<Criteria> oredCriteria;

  private Integer limit;

  private Integer offset;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public UserExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public Integer getLimit() {
    return limit;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public Integer getOffset() {
    return offset;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  protected abstract static class GeneratedCriteria {

    protected List<Criterion> isUseCriteria;

    protected List<Criterion> allCriteria;

    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
      isUseCriteria = new ArrayList<Criterion>();
    }

    public List<Criterion> getIsUseCriteria() {
      return isUseCriteria;
    }

    protected void addIsUseCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      isUseCriteria.add(new Criterion(condition, value,
          "com.xiaoju.manhattan.auto.framework.mybatis.CodeEnumTypeHandler"));
      allCriteria = null;
    }

    protected void addIsUseCriterion(String condition, StatusEnum value1, StatusEnum value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      isUseCriteria.add(new Criterion(condition, value1, value2,
          "com.xiaoju.manhattan.auto.framework.mybatis.CodeEnumTypeHandler"));
      allCriteria = null;
    }

    public boolean isValid() {
      return criteria.size() > 0
          || isUseCriteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      if (allCriteria == null) {
        allCriteria = new ArrayList<Criterion>();
        allCriteria.addAll(criteria);
        allCriteria.addAll(isUseCriteria);
      }
      return allCriteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
      allCriteria = null;
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
      allCriteria = null;
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
      allCriteria = null;
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer value1, Integer value2) {
      addCriterion("id between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer value1, Integer value2) {
      addCriterion("id not between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andTenantIdIsNull() {
      addCriterion("tenant_id is null");
      return (Criteria) this;
    }

    public Criteria andTenantIdIsNotNull() {
      addCriterion("tenant_id is not null");
      return (Criteria) this;
    }

    public Criteria andTenantIdEqualTo(String value) {
      addCriterion("tenant_id =", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdNotEqualTo(String value) {
      addCriterion("tenant_id <>", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdGreaterThan(String value) {
      addCriterion("tenant_id >", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
      addCriterion("tenant_id >=", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdLessThan(String value) {
      addCriterion("tenant_id <", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdLessThanOrEqualTo(String value) {
      addCriterion("tenant_id <=", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdLike(String value) {
      addCriterion("tenant_id like", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdNotLike(String value) {
      addCriterion("tenant_id not like", value, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdIn(List<String> values) {
      addCriterion("tenant_id in", values, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdNotIn(List<String> values) {
      addCriterion("tenant_id not in", values, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdBetween(String value1, String value2) {
      addCriterion("tenant_id between", value1, value2, "tenantId");
      return (Criteria) this;
    }

    public Criteria andTenantIdNotBetween(String value1, String value2) {
      addCriterion("tenant_id not between", value1, value2, "tenantId");
      return (Criteria) this;
    }

    public Criteria andUserIdIsNull() {
      addCriterion("user_id is null");
      return (Criteria) this;
    }

    public Criteria andUserIdIsNotNull() {
      addCriterion("user_id is not null");
      return (Criteria) this;
    }

    public Criteria andUserIdEqualTo(String value) {
      addCriterion("user_id =", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotEqualTo(String value) {
      addCriterion("user_id <>", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThan(String value) {
      addCriterion("user_id >", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThanOrEqualTo(String value) {
      addCriterion("user_id >=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThan(String value) {
      addCriterion("user_id <", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThanOrEqualTo(String value) {
      addCriterion("user_id <=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLike(String value) {
      addCriterion("user_id like", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotLike(String value) {
      addCriterion("user_id not like", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdIn(List<String> values) {
      addCriterion("user_id in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotIn(List<String> values) {
      addCriterion("user_id not in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdBetween(String value1, String value2) {
      addCriterion("user_id between", value1, value2, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotBetween(String value1, String value2) {
      addCriterion("user_id not between", value1, value2, "userId");
      return (Criteria) this;
    }

    public Criteria andUsernameIsNull() {
      addCriterion("username is null");
      return (Criteria) this;
    }

    public Criteria andUsernameIsNotNull() {
      addCriterion("username is not null");
      return (Criteria) this;
    }

    public Criteria andUsernameEqualTo(String value) {
      addCriterion("username =", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameNotEqualTo(String value) {
      addCriterion("username <>", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameGreaterThan(String value) {
      addCriterion("username >", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameGreaterThanOrEqualTo(String value) {
      addCriterion("username >=", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameLessThan(String value) {
      addCriterion("username <", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameLessThanOrEqualTo(String value) {
      addCriterion("username <=", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameLike(String value) {
      addCriterion("username like", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameNotLike(String value) {
      addCriterion("username not like", value, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameIn(List<String> values) {
      addCriterion("username in", values, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameNotIn(List<String> values) {
      addCriterion("username not in", values, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameBetween(String value1, String value2) {
      addCriterion("username between", value1, value2, "username");
      return (Criteria) this;
    }

    public Criteria andUsernameNotBetween(String value1, String value2) {
      addCriterion("username not between", value1, value2, "username");
      return (Criteria) this;
    }

    public Criteria andIsUseIsNull() {
      addCriterion("is_use is null");
      return (Criteria) this;
    }

    public Criteria andIsUseIsNotNull() {
      addCriterion("is_use is not null");
      return (Criteria) this;
    }

    public Criteria andIsUseEqualTo(StatusEnum value) {
      addIsUseCriterion("is_use =", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseNotEqualTo(StatusEnum value) {
      addIsUseCriterion("is_use <>", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseGreaterThan(StatusEnum value) {
      addIsUseCriterion("is_use >", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseGreaterThanOrEqualTo(StatusEnum value) {
      addIsUseCriterion("is_use >=", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseLessThan(StatusEnum value) {
      addIsUseCriterion("is_use <", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseLessThanOrEqualTo(StatusEnum value) {
      addIsUseCriterion("is_use <=", value, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseIn(List<StatusEnum> values) {
      addIsUseCriterion("is_use in", values, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseNotIn(List<StatusEnum> values) {
      addIsUseCriterion("is_use not in", values, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseBetween(StatusEnum value1, StatusEnum value2) {
      addIsUseCriterion("is_use between", value1, value2, "isUse");
      return (Criteria) this;
    }

    public Criteria andIsUseNotBetween(StatusEnum value1, StatusEnum value2) {
      addIsUseCriterion("is_use not between", value1, value2, "isUse");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIsNull() {
      addCriterion("last_login_time is null");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIsNotNull() {
      addCriterion("last_login_time is not null");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeEqualTo(Date value) {
      addCriterion("last_login_time =", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotEqualTo(Date value) {
      addCriterion("last_login_time <>", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeGreaterThan(Date value) {
      addCriterion("last_login_time >", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("last_login_time >=", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeLessThan(Date value) {
      addCriterion("last_login_time <", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeLessThanOrEqualTo(Date value) {
      addCriterion("last_login_time <=", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIn(List<Date> values) {
      addCriterion("last_login_time in", values, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotIn(List<Date> values) {
      addCriterion("last_login_time not in", values, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeBetween(Date value1, Date value2) {
      addCriterion("last_login_time between", value1, value2, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotBetween(Date value1, Date value2) {
      addCriterion("last_login_time not between", value1, value2, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andGmtCreateIsNull() {
      addCriterion("gmt_create is null");
      return (Criteria) this;
    }

    public Criteria andGmtCreateIsNotNull() {
      addCriterion("gmt_create is not null");
      return (Criteria) this;
    }

    public Criteria andGmtCreateEqualTo(Date value) {
      addCriterion("gmt_create =", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateNotEqualTo(Date value) {
      addCriterion("gmt_create <>", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateGreaterThan(Date value) {
      addCriterion("gmt_create >", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
      addCriterion("gmt_create >=", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateLessThan(Date value) {
      addCriterion("gmt_create <", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
      addCriterion("gmt_create <=", value, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateIn(List<Date> values) {
      addCriterion("gmt_create in", values, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateNotIn(List<Date> values) {
      addCriterion("gmt_create not in", values, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateBetween(Date value1, Date value2) {
      addCriterion("gmt_create between", value1, value2, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
      addCriterion("gmt_create not between", value1, value2, "gmtCreate");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedIsNull() {
      addCriterion("gmt_modified is null");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedIsNotNull() {
      addCriterion("gmt_modified is not null");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedEqualTo(Date value) {
      addCriterion("gmt_modified =", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedNotEqualTo(Date value) {
      addCriterion("gmt_modified <>", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedGreaterThan(Date value) {
      addCriterion("gmt_modified >", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
      addCriterion("gmt_modified >=", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedLessThan(Date value) {
      addCriterion("gmt_modified <", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
      addCriterion("gmt_modified <=", value, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedIn(List<Date> values) {
      addCriterion("gmt_modified in", values, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedNotIn(List<Date> values) {
      addCriterion("gmt_modified not in", values, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedBetween(Date value1, Date value2) {
      addCriterion("gmt_modified between", value1, value2, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
      addCriterion("gmt_modified not between", value1, value2, "gmtModified");
      return (Criteria) this;
    }

    public Criteria andTenantIdLikeInsensitive(String value) {
      addCriterion("upper(tenant_id) like", value.toUpperCase(), "tenantId");
      return (Criteria) this;
    }

    public Criteria andUserIdLikeInsensitive(String value) {
      addCriterion("upper(user_id) like", value.toUpperCase(), "userId");
      return (Criteria) this;
    }

    public Criteria andUsernameLikeInsensitive(String value) {
      addCriterion("upper(username) like", value.toUpperCase(), "username");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user
   *
   * @mbg.generated do_not_delete_during_merge
   */
  public static class Criteria extends GeneratedCriteria {

    protected Criteria() {
      super();
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user
   *
   * @mbg.generated
   */
  public static class Criterion {

    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}